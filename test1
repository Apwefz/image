<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Peziio - Kick.com Yayıncısı</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #8a2be2; /* Mor */
            --secondary: #9b30ff; /* Açık mor */
            --neon: #ff00ff; /* Neon pembe */
            --neon-green: #39ff14; /* Neon yeşil */
            --dark: #1a1a2e; /* Koyu arka plan */
            --light: #f8f8ff; /* Açık metin */
            --kick: #53fc18; /* Kick yeşili */
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: var(--dark);
            color: var(--light);
            line-height: 1.6;
            overflow-x: hidden;
        }
        
        /* Header ve Navigasyon */
        header {
            background: linear-gradient(135deg, var(--primary), var(--dark));
            padding: 1.5rem 0;
            position: relative;
            box-shadow: 0 0 15px var(--neon);
        }
        
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 2rem;
            font-weight: 700;
            color: var(--light);
            text-shadow: 0 0 10px var(--neon);
        }
        
        .nav-links {
            display: flex;
            list-style: none;
        }
        
        .nav-links li {
            margin-left: 2rem;
        }
        
        .nav-links a {
            color: var(--light);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            padding: 0.5rem 1rem;
            border-radius: 5px;
        }
        
        .nav-links a:hover {
            background-color: rgba(255, 255, 255, 0.1);
            text-shadow: 0 0 5px var(--neon);
        }
        
        /* Hero Bölümü */
        .hero {
            padding: 5rem 0;
            text-align: center;
            background: radial-gradient(circle, var(--primary) 0%, var(--dark) 70%);
            position: relative;
        }
        
        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="100" height="100" opacity="0.05"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="white"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        }
        
        .profile-img {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            border: 5px solid var(--neon);
            box-shadow: 0 0 20px var(--neon);
            margin: 0 auto 2rem;
            background: linear-gradient(45deg, var(--primary), var(--neon));
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 5rem;
            color: white;
            overflow: hidden;
        }
        
        .profile-img img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            text-shadow: 0 0 10px var(--neon);
        }
        
        .hero p {
            font-size: 1.5rem;
            max-width: 700px;
            margin: 0 auto 2rem;
            color: #ccc;
        }
        
        .cta-button {
            display: inline-block;
            padding: 1rem 2.5rem;
            background: linear-gradient(45deg, var(--neon), var(--kick));
            color: var(--dark);
            text-decoration: none;
            font-weight: 700;
            border-radius: 50px;
            transition: all 0.3s ease;
            box-shadow: 0 0 15px var(--neon);
        }
        
        .cta-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px var(--neon);
        }
        
        /* Canlı Yayın Bölümü */
        .live-stream {
            padding: 5rem 0;
            background: rgba(0, 0, 0, 0.3);
        }
        
        .stream-container {
            position: relative;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 20px var(--neon);
            margin-bottom: 2rem;
        }
        
        #player {
            width: 100%;
            min-height: 500px;
            background: linear-gradient(45deg, #000, #222);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
        }
        
        .live-badge {
            position: absolute;
            top: 20px;
            left: 20px;
            background: red;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            font-weight: bold;
            display: flex;
            align-items: center;
            animation: pulse 2s infinite;
            z-index: 10;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .live-badge i {
            margin-right: 0.5rem;
        }
        
        .offline-message {
            text-align: center;
            padding: 2rem;
        }
        
        .offline-message i {
            font-size: 5rem;
            color: var(--kick);
            margin-bottom: 1rem;
        }
        
        .offline-message h2 {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--kick);
        }
        
        .offline-message p {
            font-size: 1.2rem;
            max-width: 600px;
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .watch-on-kick {
            display: inline-block;
            padding: 1rem 2rem;
            background: var(--kick);
            color: #000;
            text-decoration: none;
            font-weight: bold;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        
        .watch-on-kick:hover {
            background: #45d40c;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(83, 252, 24, 0.4);
        }
        
        .stream-info {
            display: flex;
            justify-content: space-between;
            background: rgba(138, 43, 226, 0.2);
            padding: 1rem;
            border-radius: 0 0 10px 10px;
            border-top: 1px solid var(--primary);
        }
        
        .stream-title {
            font-size: 1.3rem;
            font-weight: bold;
        }
        
        .viewer-count {
            display: flex;
            align-items: center;
        }
        
        .viewer-count i {
            margin-right: 0.5rem;
            color: red;
        }
        
        /* İçerik Bölümleri */
        section {
            padding: 5rem 0;
        }
        
        .section-title {
            text-align: center;
            margin-bottom: 3rem;
            font-size: 2.5rem;
            text-shadow: 0 0 5px var(--neon);
            position: relative;
        }
        
        .section-title::after {
            content: '';
            display: block;
            width: 100px;
            height: 4px;
            background: linear-gradient(to right, var(--neon), var(--kick));
            margin: 0.5rem auto;
            border-radius: 2px;
        }
        
        /* Hakkımda Bölümü */
        .about-content {
            display: flex;
            align-items: center;
            gap: 3rem;
        }
        
        .about-text {
            flex: 1;
        }
        
        .about-text p {
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
        }
        
        .about-stats {
            flex: 1;
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }
        
        .stat {
            background: rgba(138, 43, 226, 0.2);
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
            border: 1px solid var(--primary);
            transition: all 0.3s ease;
        }
        
        .stat:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(255, 0, 255, 0.3);
        }
        
        .stat i {
            font-size: 2.5rem;
            color: var(--neon);
            margin-bottom: 1rem;
        }
        
        .stat h3 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        
        /* İletişim Bölümü */
        .contact-content {
            display: flex;
            gap: 3rem;
        }
        
        .contact-info {
            flex: 1;
        }
        
        .contact-item {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            padding: 1rem;
            background: rgba(138, 43, 226, 0.1);
            border-radius: 10px;
            transition: all 0.3s ease;
        }
        
        .contact-item:hover {
            background: rgba(138, 43, 226, 0.3);
            transform: translateX(10px);
        }
        
        .contact-item i {
            font-size: 1.5rem;
            color: var(--neon);
            margin-right: 1rem;
            width: 40px;
            text-align: center;
        }
        
        .contact-form {
            flex: 1;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--primary);
            border-radius: 5px;
            color: var(--light);
            font-size: 1rem;
        }
        
        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--neon);
            box-shadow: 0 0 5px var(--neon);
        }
        
        .submit-btn {
            background: linear-gradient(45deg, var(--neon), var(--kick));
            color: var(--dark);
            border: none;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            font-weight: 700;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .submit-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(255, 0, 255, 0.3);
        }
        
        /* Footer */
        footer {
            background: linear-gradient(135deg, var(--primary), var(--dark));
            padding: 3rem 0 1.5rem;
            text-align: center;
            border-top: 1px solid var(--neon);
        }
        
        .social-links {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
        }
        
        .social-links a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            color: var(--light);
            margin: 0 0.5rem;
            font-size: 1.5rem;
            transition: all 0.3s ease;
        }
        
        .social-links a:hover {
            background: var(--neon);
            transform: translateY(-5px);
            box-shadow: 0 5px 15px var(--neon);
        }
        
        .copyright {
            color: #ccc;
            font-size: 0.9rem;
        }
        
        /* Responsive Tasarım */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .hero h1 {
                font-size: 2.5rem;
            }
            
            #player {
                min-height: 300px;
            }
            
            .about-content,
            .contact-content {
                flex-direction: column;
            }
            
            .about-stats {
                grid-template-columns: 1fr;
            }
            
            iframe {
                width: 100%;
                height: 300px;
            }
        }
        
        /* Animasyonlar */
        @keyframes glow {
            0% { box-shadow: 0 0 5px var(--neon); }
            50% { box-shadow: 0 0 20px var(--neon), 0 0 30px var(--neon); }
            100% { box-shadow: 0 0 5px var(--neon); }
        }
        
        .glow {
            animation: glow 2s infinite;
        }
        
        /* Kick logosu için özel stil */
        .kick-logo {
            color: var(--kick);
        }
        
        /* Yükleniyor animasyonu */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: var(--neon);
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Header ve Navigasyon -->
    <header>
        <div class="container">
            <nav>
                <div class="logo" id="channel-name">Peziio</div>
                <ul class="nav-links">
                    <li><a href="#home">Ana Sayfa</a></li>
                    <li><a href="#live">Canlı Yayın</a></li>
                    <li><a href="#about">Hakkımda</a></li>
                    <li><a href="#contact">İletişim</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Hero Bölümü -->
    <section id="home" class="hero">
        <div class="container">
            <div class="profile-img" id="profile-image">
                <i class="fas fa-user"></i>
            </div>
            <h1 id="channel-display-name">Peziio</h1>
            <p id="channel-bio">Kick.com'da oyun, eğlence ve interaktif içeriklerle dolu bir dünyaya hoş geldiniz!</p>
            <a href="#live" class="cta-button glow">Canlı Yayını İzle</a>
        </div>
    </section>

    <!-- Canlı Yayın Bölümü -->
    <section id="live" class="live-stream">
        <div class="container">
            <h2 class="section-title">Canlı Yayın</h2>
            <div class="stream-container">
                <div id="player">
                    <!-- Canlı yayın burada yüklenecek -->
                </div>
                <div class="stream-info">
                    <div class="stream-title" id="stream-title">Yayın başlığı yükleniyor...</div>
                    <div class="viewer-count" id="viewer-count">
                        <i class="fas fa-eye"></i> <span id="viewer-count-text">İzleyici sayısı yükleniyor...</span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Hakkımda Bölümü -->
    <section id="about" class="about">
        <div class="container">
            <h2 class="section-title">Hakkımda</h2>
            <div class="about-content">
                <div class="about-text">
                    <p id="channel-description">Kanal bilgisi yükleniyor...</p>
                </div>
                <div class="about-stats">
                    <div class="stat">
                        <i class="fas fa-users"></i>
                        <h3 id="followers-count">-</h3>
                        <p>Takipçi</p>
                    </div>
                    <div class="stat">
                        <i class="fas fa-video"></i>
                        <h3 id="total-views">-</h3>
                        <p>Toplam Görüntülenme</p>
                    </div>
                    <div class="stat">
                        <i class="fas fa-calendar"></i>
                        <h3 id="created-date">-</h3>
                        <p>Katılma Tarihi</p>
                    </div>
                    <div class="stat">
                        <i class="fas fa-clock"></i>
                        <h3 id="stream-time">-</h3>
                        <p>Yayın Süresi</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- İletişim Bölümü -->
    <section id="contact" class="contact">
        <div class="container">
            <h2 class="section-title">İletişim</h2>
            <div class="contact-content">
                <div class="contact-info">
                    <div class="contact-item">
                        <i class="fab fa-kickstarter kick-logo"></i>
                        <div>
                            <h3>Kick.com</h3>
                            <p id="kick-url">kick.com/peziio</p>
                        </div>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-map-marker-alt"></i>
                        <div>
                            <h3>Konum</h3>
                            <p id="channel-location">Konum bilgisi yükleniyor...</p>
                        </div>
                    </div>
                    <div class="contact-item">
                        <i class="fas fa-clock"></i>
                        <div>
                            <h3>Yayın Saatleri</h3>
                            <p>Pazartesi-Cuma: 20:00-00:00<br>Haftasonu: 15:00-20:00</p>
                        </div>
                    </div>
                </div>
                <div class="contact-form">
                    <form>
                        <div class="form-group">
                            <label for="name">Adınız</label>
                            <input type="text" id="name" required>
                        </div>
                        <div class="form-group">
                            <label for="email">E-posta</label>
                            <input type="email" id="email" required>
                        </div>
                        <div class="form-group">
                            <label for="subject">Konu</label>
                            <input type="text" id="subject" required>
                        </div>
                        <div class="form-group">
                            <label for="message">Mesajınız</label>
                            <textarea id="message" rows="5" required></textarea>
                        </div>
                        <button type="submit" class="submit-btn">Mesaj Gönder</button>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="social-links">
                <a href="https://kick.com/peziio" target="_blank" class="kick-logo"><i class="fab fa-kickstarter"></i></a>
                <a href="#"><i class="fab fa-youtube"></i></a>
                <a href="#"><i class="fab fa-twitter"></i></a>
                <a href="#"><i class="fab fa-instagram"></i></a>
                <a href="#"><i class="fab fa-discord"></i></a>
            </div>
            <p class="copyright">© 2023 <span id="footer-channel-name">Peziio</span>. Tüm hakları saklıdır.</p>
        </div>
    </footer>

    <script>
        // Kick.com API'si ile kanal bilgilerini çekme
        async function fetchChannelData(username) {
            try {
                // Kick API'sine istek atma (CORS proxy kullanıyoruz)
                const response = await fetch(`https://api.kick.com/api/v2/channels/${username}`);
                
                if (!response.ok) {
                    throw new Error('Kanal bilgileri alınamadı');
                }
                
                const data = await response.json();
                return data;
            } catch (error) {
                console.error("API hatası:", error);
                // Fallback verileri
                return {
                    user: {
                        username: username,
                        bio: "Kick.com'da oyun, eğlence ve interaktif içeriklerle dolu bir dünyaya hoş geldiniz!",
                        profile_pic: null
                    },
                    followers_count: 5420,
                    livestream: null,
                    previous_livestreams: []
                };
            }
        }
        
        // Canlı yayın bilgilerini çekme
        async function fetchStreamData(username) {
            try {
                const response = await fetch(`https://api.kick.com/api/v2/channels/${username}/livestream`);
                
                if (!response.ok) {
                    throw new Error('Yayın bilgileri alınamadı');
                }
                
                const data = await response.json();
                return data;
            } catch (error) {
                console.error("Yayın bilgisi hatası:", error);
                return null;
            }
        }
        
        // Sayfayı kanal bilgileri ile güncelleme
        function updatePageWithChannelData(channelData, streamData) {
            // Kanal bilgilerini güncelle
            document.getElementById('channel-name').textContent = channelData.user.username;
            document.getElementById('channel-display-name').textContent = channelData.user.username;
            document.getElementById('channel-bio').textContent = channelData.user.bio || "Kick.com yayıncısı";
            document.getElementById('footer-channel-name').textContent = channelData.user.username;
            document.getElementById('kick-url').textContent = `kick.com/${channelData.user.username}`;
            
            // Profil resmini güncelle
            const profileImage = document.getElementById('profile-image');
            if (channelData.user.profile_pic) {
                profileImage.innerHTML = `<img src="${channelData.user.profile_pic}" alt="${channelData.user.username}">`;
            }
            
            // İstatistikleri güncelle
            document.getElementById('followers-count').textContent = formatNumber(channelData.followers_count);
            document.getElementById('total-views').textContent = formatNumber(channelData.previous_livestreams.reduce((total, stream) => total + (stream.viewer_count || 0), 0));
            
            // Katılma tarihini formatla
            if (channelData.user.created_at) {
                const joinDate = new Date(channelData.user.created_at);
                document.getElementById('created-date').textContent = joinDate.toLocaleDateString('tr-TR');
            }
            
            // Yayın süresini hesapla
            const totalStreamTime = channelData.previous_livestreams.reduce((total, stream) => {
                if (stream.duration) {
                    return total + stream.duration;
                }
                return total;
            }, 0);
            document.getElementById('stream-time').textContent = formatDuration(totalStreamTime);
            
            // Canlı yayın durumunu kontrol et
            if (streamData && streamData.is_live) {
                // Canlı yayın varsa
                document.getElementById('player').innerHTML = `
                    <iframe src="https://kick.com/embed/${channelData.user.username}" width="100%" height="500" frameborder="0" allowfullscreen></iframe>
                    <div class="live-badge">
                        <i class="fas fa-circle"></i> CANLI
                    </div>
                `;
                
                document.getElementById('stream-title').textContent = streamData.session_title || "Canlı Yayın";
                document.getElementById('viewer-count-text').textContent = `${formatNumber(streamData.viewer_count)} izleyici`;
            } else {
                // Canlı yayın yoksa
                document.getElementById('player').innerHTML = `
                    <div class="offline-message">
                        <i class="fas fa-broadcast-tower"></i>
                        <h2>Şu Anda Yayın Yok</h2>
                        <p>${channelData.user.username} şu anda yayında değil. Aşağıdaki butona tıklayarak Kick.com profilini ziyaret edebilirsin!</p>
                        <a href="https://kick.com/${channelData.user.username}" target="_blank" class="watch-on-kick">Kick.com'da Takip Et</a>
                    </div>
                `;
                
                document.getElementById('stream-title').textContent = "Yayın Kapalı";
                document.getElementById('viewer-count-text').textContent = "0 izleyici";
            }
            
            // Açıklamayı güncelle
            document.getElementById('channel-description').textContent = 
                channelData.user.bio || `${channelData.user.username} Kick.com'da düzenli olarak yayın yapıyor.`;
        }
        
        // Yardımcı fonksiyonlar
        function formatNumber(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + 'M';
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K';
            }
            return num.toString();
        }
        
        function formatDuration(seconds) {
            const hours = Math.floor(seconds / 3600);
            const days = Math.floor(hours / 24);
            
            if (days > 0) {
                return `${days} gün`;
            } else if (hours > 0) {
                return `${hours} saat`;
            } else {
                return `${Math.floor(seconds / 60)} dakika`;
            }
        }
        
        // Sayfa yüklendiğinde verileri çek ve güncelle
        document.addEventListener('DOMContentLoaded', async function() {
            const username = 'peziio'; // Kullanıcı adını buradan değiştirebilirsiniz
            
            // Yükleniyor durumunu göster
            document.getElementById('channel-description').innerHTML = '<span class="loading"></span> Kanal bilgileri yükleniyor...';
            
            try {
                // Kanal ve yayın verilerini paralel olarak çek
                const [channelData, streamData] = await Promise.all([
                    fetchChannelData(username),
                    fetchStreamData(username)
                ]);
                
                // Sayfayı güncelle
                updatePageWithChannelData(channelData, streamData);
                
            } catch (error) {
                console.error("Veri yükleme hatası:", error);
                document.getElementById('channel-description').textContent = "Kanal bilgileri yüklenirken bir hata oluştu.";
            }
            
            // İstatistik kutularına animasyon ekleme
            const stats = document.querySelectorAll('.stat');
            stats.forEach((stat, index) => {
                stat.style.opacity = '0';
                stat.style.transform = 'translateY(20px)';
                
                setTimeout(() => {
                    stat.style.transition = 'all 0.5s ease';
                    stat.style.opacity = '1';
                    stat.style.transform = 'translateY(0)';
                }, 300 + (index * 100));
            });
            
            // Form gönderimini simüle etme
            const contactForm = document.querySelector('.contact-form form');
            contactForm.addEventListener('submit', function(e) {
                e.preventDefault();
                alert('Mesajınız başarıyla gönderildi! En kısa sürede size dönüş yapacağım.');
                contactForm.reset();
            });
            
            // Her 2 dakikada bir verileri güncelle
            setInterval(async () => {
                try {
                    const streamData = await fetchStreamData(username);
                    const channelData = await fetchChannelData(username);
                    updatePageWithChannelData(channelData, streamData);
                } catch (error) {
                    console.error("Veri güncelleme hatası:", error);
                }
            }, 120000); // 2 dakika
        });
    </script>
</body>
</html>
